// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: create.sql

package db

import (
	"context"
)

const createAdmin = `-- name: CreateAdmin :one
INSERT INTO
	admin (first_name, last_name, email, superuser)
VALUES
	(?, ?, ?, ?)
RETURNING
	id, first_name, last_name, email, superuser, created_at, updated_at
`

type CreateAdminParams struct {
	FirstName string
	LastName  string
	Email     string
	Superuser int64
}

func (q *Queries) CreateAdmin(ctx context.Context, arg CreateAdminParams) (Admin, error) {
	row := q.db.QueryRowContext(ctx, createAdmin,
		arg.FirstName,
		arg.LastName,
		arg.Email,
		arg.Superuser,
	)
	var i Admin
	err := row.Scan(
		&i.ID,
		&i.FirstName,
		&i.LastName,
		&i.Email,
		&i.Superuser,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const createSession = `-- name: CreateSession :one
INSERT INTO
	session (admin_id, expiry)
VALUES
	(?, ?)
RETURNING
	id
`

type CreateSessionParams struct {
	AdminID string
	Expiry  int64
}

func (q *Queries) CreateSession(ctx context.Context, arg CreateSessionParams) (string, error) {
	row := q.db.QueryRowContext(ctx, createSession, arg.AdminID, arg.Expiry)
	var id string
	err := row.Scan(&id)
	return id, err
}
